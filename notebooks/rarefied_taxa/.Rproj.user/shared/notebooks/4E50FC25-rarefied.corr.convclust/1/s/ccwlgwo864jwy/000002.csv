"0","```r
#x axis log2 correlation

# cor.test.log.L6 <- log2(r.cor.L6) %>% as.numeric(.)
# cor.test.log.L6[is.nan(cor.test.log.L6)] <- 0
# cor.test.log.L6[is.infinite(cor.test.log.L6)] <- 0
# cor.test.log.L6 <- as.data.frame(cor.test.log.L6)

r.cor.L6.nutr[is.nan(r.cor.L6.nutr)] <- 0
r.cor.L6.nutr[is.infinite(r.cor.L6.nutr)] <- 0
r.cor.L6.nutr <- as.data.frame(r.cor.L6.nutr)

#y axis -log10 p.value

p.adj.log.L6.nutr <- -log10(p.adj.L6.nutr)
p.adj.log.L6.nutr[is.infinite(p.adj.log.L6.nutr)] <- 0
p.adj.log.L6.nutr <- as.data.frame(p.adj.log.L6.nutr)

cor.test.adj.L6.nutr <- cbind(cor.test.L6.nutr[ ,c(1,3)],p.adj.log.L6.nutr) %>% cbind(.,r.cor.L6.nutr) %>% as.data.frame(.)
colnames(cor.test.adj.L6.nutr) <- c('genus','clusters','p.adj.log','estimate')

cor.test.adj.L6.nutr <- cor.test.adj.L6.nutr[cor.test.adj.L6.nutr$p.adj.log != 0 & cor.test.adj.L6.nutr$estimate != 0,]

write_tsv(cor.test.adj.L6.nutr,paste0(table_dir,'corr.convclust.biom.L6.tsv'))

sig.nutr.L6 <- cor.test.adj.L6.nutr[cor.test.adj.L6.nutr$p.adj.log >= -log10(0.05) & cor.test.adj.L6.nutr$p.adj.log > 0.00000  ,] 
top.sig.nutr.L6 <- sig.nutr[order(-sig.nutr$p.adj.log ),]

```"
