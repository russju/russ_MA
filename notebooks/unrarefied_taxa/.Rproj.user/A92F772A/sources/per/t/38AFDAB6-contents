---
title: "family taxa correlations"
output: html_notebook
---

#libraries
```{r}
# if (!requireNamespace("BiocManager", quietly = TRUE))
#     install.packages("BiocManager")
# 
# BiocManager::install("biomformat")

# if (!requireNamespace('BiocManager', quietly = TRUE))
#     install.packages('BiocManager')
# 
#  BiocManager::install('EnhancedVolcano')

# if (!requireNamespace("BiocManager", quietly = TRUE))
#     install.packages("BiocManager")
# 
# BiocManager::install("a4Base")
  

library(tidyverse)
library(biomformat)
# library(data.table)
library(compositions)
# library(corrplot)
# library(EnhancedVolcano)
library(a4Base)
library(plotly)
library(gridExtra)
library(ggpubr)
```

# Paths
```{r}
wd <- '../../' 

output_dir = paste0(wd,'results/')
diet.protocols = paste0(output_dir,'diet.protocols/')

data_dir = paste0(wd,'data/')
table_dir = paste0(data_dir, 'tables/')
biom_dir = paste0(data_dir,'silva.feces/')
```

## Create Output Dirs
```{r}
dir.create(output_dir)
dir.create(table_dir)
```

# Data Import
```{r}

L6 <- read.csv(paste0(biom_dir, 'ST_silva_unrarefied_filtered300_L6.csv'),header = TRUE,row.names = 1,sep = ';')


nutr.sum <- read_tsv(paste0(table_dir, 'norm.keto.bls.06.10.tsv'))
nutr.sum$file_name <- gsub(nutr.sum$file_name,pattern='u',replacement = 'U') %>% gsub(pattern = '_',replacement = '.') 
nutr.sum <- as.data.frame(nutr.sum) %>% column_to_rownames(.,'file_name') %>% dplyr::select(.,everything(),-ends_with('rowsum'))

nutr.sum.z <- read_tsv(paste0(table_dir, 'norm.keto.bls.17.02.tsv'))%>% column_to_rownames(.,'file_name')
cl.sum.z <- read_tsv(paste0(table_dir, 'nutrient.cluster.correlation_17.02.tsv')) %>% column_to_rownames(.,'file_name')
conv.clust.z <- read_tsv(paste0(table_dir, 'conv.cluster.correlation_17.02.tsv'))%>% column_to_rownames(.,'file_name')

cl.sum <- read_tsv(paste0(table_dir, 'nutrient.cluster.correlation_22.10.tsv')) %>% column_to_rownames(.,'file_name')



conv.sum <- read_tsv(paste0(table_dir, 'conv.cluster.correlation_26.10.tsv'))%>% column_to_rownames(.,'file_name')



```
family information on L6 unrarefied microbiome data

conventional clusters per samples conv.sum relative,centered log ratio transformed
conv.clust.z  z score standardized convetional clusters per sample

nutrient clusters per samples cl.sum relative,centered log ratio transformed
cl.clust.z  z score standardized convetional clusters per sample

also only U1 (non keto regular diet) and only U2 (keto diet)

#cleaning up L6
```{r}
#two samples for U1,U2 and U3
#merging them ore deleting?

L6 <- L6[!grepl(pattern = 'U3',row.names(L6)),]
row.names(L6) <- str_replace(row.names(L6),pattern = 'ST.',replacement = '') %>% 
  str_replace(.,pattern = '0U', replacement = 'U') 

L6 <- L6[!grepl('.2U',row.names(L6)),]
L6 <- dplyr::select(L6,everything(),-starts_with(c('Sex','Time','Proband','Body','Day')))


```

#family taxa groups
```{r}

L6.family <- sapply(split.default(L6, sub('.*_(.*ceae).*', '\\1', names(L6))), rowSums) %>% as.data.frame(.)

L6.family <- dplyr::select(L6.family,ends_with('ceae'))
```

#data transformation L6 family
```{r}
#sum of the rows

#taxa

L6.family <- data.matrix(L6.family)
L6.family <- L6.family+0.5##pseudocount
rowsum <- rowSums(L6.family)


L6.family <- cbind(L6.family,rowsum)

#OTU count / OTU sample sum = rel. abund  taxa

L6.family <- as.data.frame(L6.family)

L6.family <- L6.family/L6.family$rowsum
# L6.family <- L6.family[ ,-106]

#clr transformation
L6.family <- clr(L6.family) %>% as.data.frame(.) ##acomp

L6.family <- dplyr::select(L6.family,everything(), -starts_with(c('row','file')))

# L6.family$file_name <- row.names(L6.family)
# write_tsv(L6.family,'C:/Users/Juliane/Desktop/project.directory/data/tables/family.correlation.30.10.tsv')


```

##all nutrients correlated with families
```{r}
# L6.family <- read_tsv('C:/Users/Juliane/Desktop/project.directory/data/tables/family.correlation.30.10.tsv') %>% column_to_rownames(.,'file_name')

merge.L6.family <- L6.family %>% merge(.,nutr.sum.z,by = 'row.names',all.x=T,all.y = T) %>% column_to_rownames(.,'Row.names')

merge.L6.family[is.na(merge.L6.family)] <- 0
# merge.L6.family <- dplyr::select(merge.L6.family,everything(),-ends_with('rowsum'))

cor.test.family <- merge.L6.family %>% 
  pivot_longer(names_to = "variable_right", values_to = "value_right", Acidaminococcaceae:Xanthomonadaceae) %>% 
  pivot_longer(names_to = "variable_left", values_to = "value_left", `Energie (kcal)`:`Energie, Gesamt (kcal)`) %>% 
  group_by(variable_left, variable_right) %>% 
  
  mutate(p.value = broom::tidy(cor.test(value_left, value_right,method = 'spearman'))$p.value,
         estimate = broom::tidy(cor.test(value_left, value_right,method = 'spearman'))$estimate)

cor.test.family[is.na(cor.test.family)] <- 0

p.adj <- subset(cor.test.family,select = `p.value`) %>% data.matrix(.) %>% p.adjust(.,method = 'fdr')
r.cor <- subset(cor.test.family,select = `estimate`) %>% data.matrix(.)


#x axis log2 correlation

cor.test.log <- log2(r.cor) %>% as.numeric(.)
cor.test.log [is.nan(cor.test.log)] <- 0
cor.test.log [is.infinite(cor.test.log)] <- 0
cor.test.log <- as.data.frame(cor.test.log)

r.cor[is.nan(r.cor)] <- 0
r.cor[is.infinite(r.cor)] <- 0
r.cor<- as.data.frame(r.cor)

#y axis -log10 p.value

p.adj.log <- -log10(p.adj)
p.adj.log[is.infinite(p.adj.log)] <- 0
p.adj.log <- as.data.frame(p.adj.log)

cor.test.family <- cbind(cor.test.family[ ,c(1,3)],p.adj.log) %>% cbind(.,r.cor) %>% as.data.frame(.)
colnames(cor.test.family) <- c('taxa','nutrients','p.adj.log','estimate')

cor.test.family <- cor.test.family[cor.test.family$p.adj.log != 0 & cor.test.family$estimate != 0,]

# write_tsv(cor.test.family,'C:/Users/Juliane/Desktop/project.directory/data/tables/corr.nutr.family.tsv')

sig.family <- cor.test.family[cor.test.family$p.adj.log <= 0.050 & cor.test.family$p.adj.log > 0.00000,]
top.sig.family <- sig.family[order(-sig.family$p.adj.log ),][1:11,]

#volcano plot ggplot()

vp <- ggplot(cor.test.family,
    aes(x = `estimate`, y = `p.adj.log`)) +
  geom_point() +
  ggtitle("Volcano plot") +
  xlab("correlation") + 
  ylab("-log10 adjusted p-value")

vp
```

##conv cluster correlated with family taxa
```{r}
merge.L6.conv <- L6.family %>% merge(.,conv.clust.z,by = 'row.names',all.x=T,all.y = T) %>% column_to_rownames(.,'Row.names')

merge.L6.conv [is.na(merge.L6.conv )] <- 0
merge.L6.conv  <- dplyr::select(merge.L6.conv ,everything(),-ends_with('rowsum'))

cor.test.conv <- merge.L6.conv  %>% 
  pivot_longer(names_to = "variable_right", values_to = "value_right", Acidaminococcaceae:Xanthomonadaceae) %>% 
  pivot_longer(names_to = "variable_left", values_to = "value_left", `Alkoholfreie GetrÃ¤nke`:`Wurst, Fleischwaren`) %>% 
  group_by(variable_left, variable_right) %>% 
  
  mutate(p.value = broom::tidy(cor.test(value_left, value_right,method = 'spearman'))$p.value,
         estimate = broom::tidy(cor.test(value_left, value_right,method = 'spearman'))$estimate)

cor.test.conv [is.na(cor.test.conv )] <- 0

p.adj <- subset(cor.test.conv ,select = `p.value`) %>% data.matrix(.) %>% p.adjust(.,method = 'fdr')
r.cor <- subset(cor.test.conv ,select = `estimate`) %>% data.matrix(.)


#x axis log2 correlation

cor.test.log <- log2(r.cor) %>% as.numeric(.)
cor.test.log [is.nan(cor.test.log)] <- 0
cor.test.log [is.infinite(cor.test.log)] <- 0
cor.test.log <- as.data.frame(cor.test.log)

r.cor[is.nan(r.cor)] <- 0
r.cor[is.infinite(r.cor)] <- 0
r.cor<- as.data.frame(r.cor)

#y axis -log10 p.value

p.adj.log <- -log10(p.adj)
p.adj.log[is.infinite(p.adj.log)] <- 0
p.adj.log <- as.data.frame(p.adj.log)

cor.test.conv  <- cbind(cor.test.conv [ ,c(1,3)],p.adj.log) %>% cbind(.,r.cor) %>% as.data.frame(.)
colnames(cor.test.conv ) <- c('family','conv clusters','p.adj.log','estimate')

cor.test.conv <- cor.test.conv[cor.test.conv$p.adj.log != 0 & cor.test.conv$estimate != 0,]

# write_tsv(cor.test.conv ,'C:/Users/Juliane/Desktop/project.directory/data/tables/corr.convclust.family.tsv')

sig.conv <- cor.test.conv[cor.test.conv$p.adj.log <= 0.050 & cor.test.conv$p.adj.log > 0.00000,]
top.sig.conv <- cor.test.conv[order(-cor.test.conv$p.adj.log ),][1:48,]


#volcano plot ggplot()

vp <- ggplot(cor.test.conv ,
    aes(x = `estimate`, y = `p.adj.log`)) +
  geom_point() +
  ggtitle("Volcano plot") +
  xlab("correlation") + 
  ylab("-log10 adjusted p-value")
```

##nutr cluster correlated with family
```{r}
merge.L6.nutr <- L6.family %>% merge(.,cl.sum.z,by = 'row.names',all.x=T,all.y = T) %>% column_to_rownames(.,'Row.names')

merge.L6.nutr[is.na(merge.L6.nutr)] <- 0
merge.L6.nutr <- dplyr::select(merge.L6.nutr,everything(),-ends_with('rowsum'))


cor.test.nutr <- merge.L6.nutr %>% 
  pivot_longer(names_to = "variable_right", values_to = "value_right", Acidaminococcaceae:Xanthomonadaceae) %>% 
  pivot_longer(names_to = "variable_left", values_to = "value_left", `1.veg.fruit`:`15.cheese`) %>% 
  group_by(variable_left, variable_right) %>% 
  
  mutate(p.value = broom::tidy(cor.test(value_left, value_right,method = 'spearman'))$p.value,
         estimate = broom::tidy(cor.test(value_left, value_right,method = 'spearman'))$estimate)

cor.test.nutr[is.na(cor.test.nutr)] <- 0

p.adj <- subset(cor.test.nutr,select = `p.value`) %>% data.matrix(.) %>% p.adjust(.,method = 'fdr')
r.cor <- subset(cor.test.nutr,select = `estimate`) %>% data.matrix(.)

#x axis log2 correlation

cor.test.log <- log2(r.cor) %>% as.numeric(.)
cor.test.log [is.nan(cor.test.log)] <- 0
cor.test.log [is.infinite(cor.test.log)] <- 0
cor.test.log <- as.data.frame(cor.test.log)

r.cor[is.nan(r.cor)] <- 0
r.cor[is.infinite(r.cor)] <- 0
r.cor<- as.data.frame(r.cor)

#y axis -log10 p.value

p.adj.log <- -log10(p.adj)
p.adj.log[is.infinite(p.adj.log)] <- 0
p.adj.log <- as.data.frame(p.adj.log)

cor.test.nutr <- cbind(cor.test.nutr[ ,c(1,3)],p.adj.log) %>% cbind(.,r.cor) %>% as.data.frame(.)
colnames(cor.test.nutr) <- c('family','nutrient clusters','p.adj.log','estimate')

cor.test.nutr <- cor.test.nutr[cor.test.nutr$p.adj.log != 0 & cor.test.nutr$estimate != 0,]

# write_tsv(cor.test.nutr,'C:/Users/Juliane/Desktop/project.directory/data/tables/corr.nutclust.family.tsv')

sig.nutr <- cor.test.nutr[cor.test.nutr$p.adj.log <= 0.050 & cor.test.nutr$p.adj.log > 0.00000,]
top.sig.nutr <- sig.nutr[order(-sig.nutr$p.adj.log ),]

#volcano plot ggplot()

vp <- ggplot(cor.test.nutr,
    aes(x = `estimate`, y = `p.adj.log`)) +
  geom_point() +
  ggtitle("Volcano plot") +
  xlab("correlation") + 
  ylab("-log10 adjusted p-value")

```

##U1 and U2 separately correlated with family
#U1
```{r}
#only U1

L6.U1 <- L6.family[grepl(pattern = 'U1',row.names(L6.family)), ]
nutr.U1 <- nutr.sum[grepl(pattern = 'U1',row.names(nutr.sum)), ]

#only U2

L6.U2 <- L6.family[grepl(pattern = 'U2',row.names(L6.family)), ]
nutr.U2 <- nutr.sum[grepl(pattern = 'U2',row.names(nutr.sum)), ]

##U1

merge.L6.U1 <- L6.U1 %>% merge(.,nutr.U1,by = 'row.names',all.x=T,all.y = T) %>% column_to_rownames(.,'Row.names')

merge.L6.U1[is.na(merge.L6.U1)] <- 0
merge.L6.U1 <- dplyr::select(merge.L6.U1,everything(),-ends_with('rowsum'))

cor.test.U1 <- merge.L6.U1 %>% 
  pivot_longer(names_to = "variable_right", values_to = "value_right", Acidaminococcaceae:Xanthomonadaceae) %>% 
  pivot_longer(names_to = "variable_left", values_to = "value_left", `Energie (kcal)`:`Energie, Gesamt (kcal)`) %>% 
  group_by(variable_left, variable_right) %>% 
  
  summarize(p.value = broom::tidy(cor.test(value_left, value_right,method = 'spearman'))$p.value,
         estimate = broom::tidy(cor.test(value_left, value_right,method = 'spearman'))$estimate)

cor.test.U1[is.na(cor.test.U1)] <- 0

p.adj <- subset(cor.test.U1,select = `p.value`) %>% data.matrix(.) %>% p.adjust(.,method = 'fdr')
r.cor <- subset(cor.test.U1,select = `estimate`) %>% data.matrix(.)


#x axis log2 correlation

cor.test.log <- log2(r.cor) %>% as.numeric(.)
cor.test.log [is.nan(cor.test.log)] <- 0
cor.test.log [is.infinite(cor.test.log)] <- 0
cor.test.log <- as.data.frame(cor.test.log)

r.cor[is.nan(r.cor)] <- 0
r.cor[is.infinite(r.cor)] <- 0
r.cor<- as.data.frame(r.cor)

#y axis -log10 p.value

p.adj.log <- -log10(p.adj)
p.adj.log[is.infinite(p.adj.log)] <- 0
p.adj.log <- as.data.frame(p.adj.log)

cor.test.U1 <- cbind(cor.test.U1[ ,c(1,2)],p.adj.log) %>% cbind(.,r.cor) %>% as.data.frame(.)
colnames(cor.test.U1) <- c('nutrient','taxa','p.adj.log','estimate')

sig.U1 <- cor.test.U1[cor.test.U1$p.adj.log <= 0.050 & cor.test.U1$p.adj.log > 0.00000,]
top.sig.U1 <- sig.U1[order(-sig.U1$p.adj.log ),][1:11,]


```
#U2
```{r}
##U2

merge.L6.U2 <- L6.U2 %>% merge(.,nutr.U2,by = 'row.names',all.x=T,all.y = T) %>% column_to_rownames(.,'Row.names')

merge.L6.U2[is.na(merge.L6.U2)] <- 0
merge.L6.U2 <- dplyr::select(merge.L6.U2,everything(),-ends_with('rowsum'))

cor.test.U2 <- merge.L6.U2 %>% 
  pivot_longer(names_to = "variable_right", values_to = "value_right", Acidaminococcaceae:Xanthomonadaceae) %>% 
  pivot_longer(names_to = "variable_left", values_to = "value_left", `Energie (kcal)`:`Energie, Gesamt (kcal)`) %>% 
  group_by(variable_left, variable_right) %>% 
  
  summarize(p.value = broom::tidy(cor.test(value_left, value_right,method = 'spearman'))$p.value,
         estimate = broom::tidy(cor.test(value_left, value_right,method = 'spearman'))$estimate)

cor.test.U2[is.na(cor.test.U2)] <- 0

p.adj <- subset(cor.test.U2,select = `p.value`) %>% data.matrix(.) %>% p.adjust(.,method = 'fdr')
r.cor <- subset(cor.test.U2,select = `estimate`) %>% data.matrix(.)


#x axis log2 correlation

cor.test.log <- log2(r.cor) %>% as.numeric(.)
cor.test.log [is.nan(cor.test.log)] <- 0
cor.test.log [is.infinite(cor.test.log)] <- 0
cor.test.log <- as.data.frame(cor.test.log)

r.cor[is.nan(r.cor)] <- 0
r.cor[is.infinite(r.cor)] <- 0
r.cor<- as.data.frame(r.cor)

#y axis -log10 p.value

p.adj.log <- -log10(p.adj)
p.adj.log[is.infinite(p.adj.log)] <- 0
p.adj.log <- as.data.frame(p.adj.log)

cor.test.U2 <- cbind(cor.test.U2[ ,c(1,2)],p.adj.log) %>% cbind(.,r.cor) %>% as.data.frame(.)
colnames(cor.test.U2) <- c('nutrient','taxa','p.adj.log','estimate')

sig.U2 <- cor.test.U2[cor.test.U2$p.adj.log <= 0.050 & cor.test.U2$p.adj.log > 0.00000,]
top.sig.U2 <- sig.U2[order(-sig.U2$p.adj.log ),][1:11,]

```

