geom_boxplot()+ggtitle('Shannon Index conventional clusters') + stat_compare_means(comparison = list(c('high converter','low converter'),c('not classified','low converter'),c('not classified','high converter')),hide.ns = FALSE)+geom_jitter(shape = 21)#,symnum.args = symnum.args
# + stat_compare_means(comparison = list(c('high converter','low converter')),hide.ns = FALSE)
sh.conv.group <- ggplot(div.conv,aes(x=group, y=`Shannon Index`)) +
geom_boxplot()+ggtitle('Shannon Index conventional clusters')+ stat_compare_means(comparison = list(c('non keto','keto')),hide.ns = FALSE,symnum.args = symnum.args)+geom_jitter(shape = 21) + coord_cartesian(ylim = c(0.25,4))#,symnum.args = symnum.args
# + stat_compare_means(comparison = list(c('U1','U2')),hide.ns = FALSE)
#U1 and U2 seperatly
div.conv.u1 <- subset(div.conv,grepl('non keto',div.conv$group))
div.conv.u2 <- subset(div.conv,grepl('keto',div.conv$group))
sh.conv.pheno.group.u1 <- ggplot(div.conv.u1,aes(x=Phenotype, y=`Shannon Index`)) +
geom_boxplot()+ggtitle('Shannon Index non keto diet conventional clusters')+ stat_compare_means(comparison = list(c('high converter','low converter')),hide.ns = FALSE,symnum.args = symnum.args)+ theme(plot.title = element_text(size=10))
# +geom_signif(comparison = list(c('high converter','low converter')),map_signif_level = TRUE)
sh.conv.pheno.group.u2  <- ggplot(div.conv.u2,aes(x=Phenotype, y=`Shannon Index`)) +
geom_boxplot()+ggtitle('Shannon Index keto diet conventional clusters')+ stat_compare_means(comparison = list(c('high converter','low converter')),hide.ns = FALSE,symnum.args = symnum.args)+ theme(plot.title = element_text(size=10))+geom_jitter(shape = 21)
#boxplots conv subgroup
pd.conv.sg <- ggplot(div.conv,aes(x=subgroup, y=`Shannon Index`, fill=subgroup)) +
geom_boxplot()+ggtitle('subgroups Shannon Index\nconventional clusters')+
geom_signif(comparison = list(c('subgroup 1','subgroup 2 ')),map_signif_level = TRUE)+ stat_compare_means(comparison = list(c('subgroup 1','subgroup 2 ')),hide.ns = FALSE)
# + stat_compare_means(comparison = list(c('high converter','low converter')),hide.ns = FALSE)##wilcox test
pd.conv.group <- ggplot(div.conv,aes(x=group, y=`Shannon Index`)) +
geom_boxplot()+ggtitle('Shannon Index conventional clusters')+ stat_compare_means(comparison = list(c('non keto','keto')),hide.ns = FALSE,symnum.args = symnum.args)
#U1 and U2 seperatly
div.conv.u1.plot.sg <- ggplot(div.conv.u1,aes(x=subgroup, y=`Shannon Index`, fill=subgroup)) +
geom_boxplot()+ggtitle('subgroups Shannon Index U1\nconventional clusters')+
geom_signif(comparison = list(c('subgroup 1','subgroup 2')),map_signif_level = TRUE)+ stat_compare_means(comparison = list(c('subgroup 1','subgroup 2 ')),hide.ns = FALSE)+ theme(plot.title = element_text(size=10))
div.conv.u2.plot.sg <- ggplot(div.conv.u2,aes(x=subgroup, y=`Shannon Index`, fill=subgroup)) +
geom_boxplot()+ggtitle('subgroups Shannon Index U2\nconventional clusters')+
geom_signif(comparison = list(c('subgroup 1','subgroup 2')),map_signif_level = TRUE)+ stat_compare_means(comparison = list(c('subgroup 1','subgroup 2 ')),hide.ns = FALSE)+ theme(plot.title = element_text(size=10))
#community matrix
# #df nutrient cluster
#
# nutr.clust <- pivot_wider(df,names_from = nutrient.clusters,values_from = value) %>% column_to_rownames(.,var = 'sample')
#
# # nutr.clust$file_name <- row.names(nutr.clust)
# # write_tsv(nutr.clust,path = 'C:/Users/Juliane/Desktop/project.directory/data/tables/nutr.clust.df.01.10.tsv')
nutr.clust <- read_tsv(paste0(table_dir, 'nutr.clust.df.01.10.tsv') %>% column_to_rownames(.,'file_name'))
#community matrix
# #df nutrient cluster
#
# nutr.clust <- pivot_wider(df,names_from = nutrient.clusters,values_from = value) %>% column_to_rownames(.,var = 'sample')
#
# # nutr.clust$file_name <- row.names(nutr.clust)
# # write_tsv(nutr.clust,path = 'C:/Users/Juliane/Desktop/project.directory/data/tables/nutr.clust.df.01.10.tsv')
nutr.clust <- read_tsv(paste0(table_dir, 'nutr.clust.df.01.10.tsv') %>% as.data.frame %>% column_to_rownames(.,'file_name'))
div.nutr <- diversity(nutr.clust, index = 'shannon', base = 2) %>% as.data.frame(.)
#community matrix
#richness calculation
conv.clust <- read_tsv(paste0(table_dir, 'conv.clust.df.weighted.01.10.tsv')) %>% column_to_rownames(.,'file_name')
div.conv <- diversity(conv.clust, index = 'shannon', base = 2) %>% as.data.frame(.)
colnames(div.conv) <- 'Shannon Index'
div.conv$file_name <- row.names(div.conv)
write_tsv(div.conv,paste0(table_dir,'shannon.conv.tsv'))
#adding Sex,group and Phenotype,subgroups
dv <- merge(div.conv, k.bls_prodi, by=c('file_name'))
div.conv <- subset(dv,select = c(`file_name`,`Sex`,`Phenotype`,`Shannon Index`))
div.conv$Sex <- ifelse(div.conv$Sex == FALSE,'f','m')
div.conv$group <- ifelse(grepl('U1', div.conv$file_name), 'non keto', 'keto')
#deleting not classified,NA
# div.conv <- div.conv[div.conv$Phenotype != 'not classified', ]
div.conv <- div.conv[!is.na(div.conv$Phenotype), ]
div.conv[complete.cases(div.conv), ]
div.conv <- div.conv %>% distinct(.)
##normalize shannon
div.conv$sh.sum <- with(div.conv, ave(`Shannon Index`, FUN = sum))
div.conv$sh.norm <- div.conv$sh.sum/div.conv$`Shannon Index`
##summary statistics
sh.conv.u1 <- div.conv[grepl('U1',div.conv$file_name),]
summary(sh.conv.u1$`Shannon Index`)
sd(sh.conv.u1$`Shannon Index`)
sh.conv.u2 <- div.conv[grepl('U2',div.conv$file_name),]
summary(sh.conv.u2$`Shannon Index`)
sd(sh.conv.u2$`Shannon Index`)
sh.conv.high <- div.conv[grepl('low',div.conv$Phenotype),]
summary(sh.conv.high$`Shannon Index`)
sd(sh.conv.high$`Shannon Index`)
#boxplots conv Phenotype
sh.conv.pheno <- ggplot(div.conv,aes(x=Phenotype, y=`Shannon Index`)) +
geom_boxplot()+ggtitle('Shannon Index conventional clusters') + stat_compare_means(comparison = list(c('high converter','low converter'),c('not classified','low converter'),c('not classified','high converter')),hide.ns = FALSE)+geom_jitter(shape = 21)#,symnum.args = symnum.args
# + stat_compare_means(comparison = list(c('high converter','low converter')),hide.ns = FALSE)
sh.conv.group <- ggplot(div.conv,aes(x=group, y=`Shannon Index`)) +
geom_boxplot()+ggtitle('Shannon Index conventional clusters')+ stat_compare_means(comparison = list(c('non keto','keto')),hide.ns = FALSE,symnum.args = symnum.args)+geom_jitter(shape = 21) + coord_cartesian(ylim = c(0.25,4))#,symnum.args = symnum.args
# + stat_compare_means(comparison = list(c('U1','U2')),hide.ns = FALSE)
#U1 and U2 seperatly
div.conv.u1 <- subset(div.conv,grepl('non keto',div.conv$group))
div.conv.u2 <- subset(div.conv,grepl('keto',div.conv$group))
sh.conv.pheno.group.u1 <- ggplot(div.conv.u1,aes(x=Phenotype, y=`Shannon Index`)) +
geom_boxplot()+ggtitle('Shannon Index non keto diet conventional clusters')+ stat_compare_means(comparison = list(c('high converter','low converter')),hide.ns = FALSE,symnum.args = symnum.args)+ theme(plot.title = element_text(size=10))
# +geom_signif(comparison = list(c('high converter','low converter')),map_signif_level = TRUE)
sh.conv.pheno.group.u2  <- ggplot(div.conv.u2,aes(x=Phenotype, y=`Shannon Index`)) +
geom_boxplot()+ggtitle('Shannon Index keto diet conventional clusters')+ stat_compare_means(comparison = list(c('high converter','low converter')),hide.ns = FALSE,symnum.args = symnum.args)+ theme(plot.title = element_text(size=10))+geom_jitter(shape = 21)
#boxplots conv subgroup
pd.conv.sg <- ggplot(div.conv,aes(x=subgroup, y=`Shannon Index`, fill=subgroup)) +
geom_boxplot()+ggtitle('subgroups Shannon Index\nconventional clusters')+
geom_signif(comparison = list(c('subgroup 1','subgroup 2 ')),map_signif_level = TRUE)+ stat_compare_means(comparison = list(c('subgroup 1','subgroup 2 ')),hide.ns = FALSE)
# + stat_compare_means(comparison = list(c('high converter','low converter')),hide.ns = FALSE)##wilcox test
pd.conv.group <- ggplot(div.conv,aes(x=group, y=`Shannon Index`)) +
geom_boxplot()+ggtitle('Shannon Index conventional clusters')+ stat_compare_means(comparison = list(c('non keto','keto')),hide.ns = FALSE,symnum.args = symnum.args)
#U1 and U2 seperatly
div.conv.u1.plot.sg <- ggplot(div.conv.u1,aes(x=subgroup, y=`Shannon Index`, fill=subgroup)) +
geom_boxplot()+ggtitle('subgroups Shannon Index U1\nconventional clusters')+
geom_signif(comparison = list(c('subgroup 1','subgroup 2')),map_signif_level = TRUE)+ stat_compare_means(comparison = list(c('subgroup 1','subgroup 2 ')),hide.ns = FALSE)+ theme(plot.title = element_text(size=10))
div.conv.u2.plot.sg <- ggplot(div.conv.u2,aes(x=subgroup, y=`Shannon Index`, fill=subgroup)) +
geom_boxplot()+ggtitle('subgroups Shannon Index U2\nconventional clusters')+
geom_signif(comparison = list(c('subgroup 1','subgroup 2')),map_signif_level = TRUE)+ stat_compare_means(comparison = list(c('subgroup 1','subgroup 2 ')),hide.ns = FALSE)+ theme(plot.title = element_text(size=10))
#community matrix
# #df nutrient cluster
#
# nutr.clust <- pivot_wider(df,names_from = nutrient.clusters,values_from = value) %>% column_to_rownames(.,var = 'sample')
#
# # nutr.clust$file_name <- row.names(nutr.clust)
# # write_tsv(nutr.clust,path = 'C:/Users/Juliane/Desktop/project.directory/data/tables/nutr.clust.df.01.10.tsv')
nutr.clust <- read_tsv(paste0(table_dir, 'nutr.clust.df.01.10.tsv') %>% as.data.frame %>% column_to_rownames(.,'file_name'))
View(nutr.clust)
nutr.clust <- read_tsv(paste0(table_dir, 'nutr.clust.df.01.10.tsv') %>% as.data.frame
bl
nutr.clust <- read_tsv(paste0(table_dir, 'nutr.clust.df.01.10.tsv')
f
library(tidyverse)
library(ape)
library(phyloseq)
library(ggplot2)
library(plotly)
library(ggpubr)
# library(DECIPHER)
wd <- '../../'
output_dir = paste0(wd,'results/')
diet.protocols = paste0(output_dir,'diet.protocols/')
data_dir = paste0(wd,'data/')
table_dir = paste0(data_dir, 'tables/')
biom_dir = paste0(data_dir,'silva.feces/')
dir.create(output_dir)
dir.create(table_dir)
#otu_table per week
otu.week <- read_tsv(paste0(table_dir,'otu.conv.uw.19.08.tsv'))
otu.week <- as.data.frame(otu.week)
row.names(otu.week) <- otu.week$file_name
otu.week <- otu.week[ ,-1]
otu.week <- otu_table(otu.week,taxa_are_rows = FALSE)
#otu_table per day
otu.day <- read_tsv(paste0(table_dir,'otu.conv.uw.samp.19.08.tsv'))
otu.day  <- as.data.frame(otu.day )
row.names(otu.day) <- otu.day$sample_day
otu.day  <- otu.day [ ,-1]
otu.day  <- otu_table(otu.day ,taxa_are_rows = FALSE)
#trees
tree.conv <- read.tree(paste0(table_dir,'tree.conv.19.08.tre'))
tree.nutr <- read.tree(paste0(table_dir,'tree.keto.bls.19.08.tre'))
#df
k.bls_prodi <- read_tsv(paste0(table_dir,'k.bls_prodi_13_08.tsv'))
k.bls_prodi$file_name <- gsub(k.bls_prodi$file_name,pattern='u',replacement = 'U') %>% gsub(pattern = '_',replacement = '.')
k.bls_prodi$Sex[k.bls_prodi$Sex == FALSE] <- 'female'
k.bls_prodi$Sex[is.na(k.bls_prodi$Sex)] <- 0
k.bls_prodi$Sex[k.bls_prodi$Sex == 0] <- 'male'
#conventional clustering
#per week samples Jaccard distance
physeq.week <- phyloseq(otu.week,tree.conv)
jac.conv.week <- phyloseq::distance(physeq.week, method = "jaccard", binary = TRUE)
pcoa_jac.conv.week <- ape::pcoa(jac.conv.week)
#variance
get_explained_variance <- function(pcoa) {
return(paste0(round(pcoa$values$Rel_corr_eig * 100, 2), '%'))
}
get_explained_variance(pcoa_jac.conv.week)[1:2]
pcoa_jac.conv.week$vectors <- pcoa_jac.conv.week$vectors %>% as.data.frame(.)
var.jacAxis.1 <- var(pcoa_jac.conv.week$vectors$Axis.1)##0.02580485
var.jacAxis.2 <- var(pcoa_jac.conv.week$vectors$Axis.2)##0.02279566
#per day samples Jaccard distance
physeq.day <- phyloseq(otu.day,tree.conv)
jac.conv.day <- phyloseq::distance(physeq.day, method = "jaccard", binary = TRUE)
pcoa_jac.conv.day <- ape::pcoa(jac.conv.day)
#visualizations per week
#Phenotype
metadata.pheno <-
k.bls_prodi %>%
dplyr::select(file_name:Phenotype) %>%
distinct() %>%
dplyr::rename(Name = file_name)
a <- pcoa_jac.conv.week$vectors %>%
as.data.frame(.) %>%
rownames_to_column('Name') %>%
dplyr::select(Name, Axis.1:Axis.5) %>%
separate(Name, remove = F, into = c('Sample','U'), sep = '[.]') %>%
left_join(., metadata.pheno, by = 'Name') %>%
mutate(Pheno = ifelse(Phenotype == 'not classified', NA, Phenotype)) %>%
ggplot(aes(Axis.1, Axis.2)) +
geom_point(aes(fill = U, alpha = Pheno),
shape = 21, col = 'black', size = 4) + ggtitle('PcoA Jaccard distance\nconventional clusters samples per week')
#Sex
metadata.sex <-
k.bls_prodi %>%
select(file_name:Sex) %>%
distinct() %>%
dplyr::rename(Name = file_name)
as <- pcoa_jac.conv.week$vectors %>%
as.data.frame(.) %>%
rownames_to_column('Name') %>%
dplyr::select(Name, Axis.1:Axis.5) %>%
separate(Name, remove = F, into = c('Sample','U'), sep = '[.]') %>%
left_join(., metadata.sex, by = 'Name') %>%
mutate(Pheno = ifelse(Sex == 'not classified', NA, Sex)) %>%
ggplot(aes(Axis.1, Axis.2)) +
geom_point(aes(fill = U, alpha = Sex),
shape = 21, col = 'black', size = 4) + ggtitle('PcoA Jaccard distance\nconventional clusters samples per week')
#visualizations per day
#Phenotype
pcoa_jac.conv.day$vectors %>%
as.data.frame(.) %>%
rownames_to_column('Name') %>%
dplyr::select(Name, Axis.1:Axis.5) %>%
separate(Name, remove = F, into = c('Sample','U'), sep = '[.]') %>%
left_join(., metadata.pheno, by = 'Name') %>%
mutate(Pheno = ifelse(Phenotype == 'not classified', NA, Phenotype)) %>%
ggplot(aes(Axis.1, Axis.2)) +
geom_point(aes(fill = U, alpha = Pheno),
shape = 21, col = 'black', size = 4) + ggtitle('PcoA Jaccard distance\nconventional clusters samples per day')
#Sex
pcoa_jac.conv.day$vectors %>%
as.data.frame(.) %>%
rownames_to_column('Name') %>%
dplyr::select(Name, Axis.1:Axis.5) %>%
separate(Name, remove = F, into = c('Sample','U'), sep = '[.]') %>%
left_join(., metadata.sex, by = 'Name') %>%
mutate(Pheno = ifelse(Sex == 'not classified', NA, Sex)) %>%
ggplot(aes(Axis.1, Axis.2)) +
geom_point(aes(fill = U, alpha = Sex),
shape = 21, col = 'black', size = 4) + ggtitle('PcoA Jaccard distance\nconventional clusters samples per day')
#nutrient clustering
# tree.nutr <- tree.keto.bls
#per week samples Jaccard distance
physeq.week.nut <- phyloseq(otu.week,tree.nutr)
jac.week.nut <- phyloseq::distance(physeq.week.nut, method = "jaccard", binary = TRUE)
pcoa_jac.week.nut <- ape::pcoa(jac.week.nut)
#variance
get_explained_variance(pcoa_jac.week.nut)[1:2]
pcoa_jac.week.nut$vectors <- pcoa_jac.week.nut$vectors %>% as.data.frame(.)
var.jacnutAxis.1 <- var(pcoa_jac.week.nut$vectors$Axis.1)##0.02590604
var.jacnutAxis.2 <- var(pcoa_jac.week.nut$vectors$Axis.2)##0.02255687
#per day samples Jaccard distance
physeq.day.nut <- phyloseq(otu.day,tree.nutr)
jac.day.nut <- phyloseq::distance(physeq.day.nut, method = "jaccard", binary = TRUE)
pcoa_jac.day.nut <- ape::pcoa(jac.day.nut)
#visualizations per week
#Phenotype
b <- pcoa_jac.week.nut$vectors %>%
as.data.frame(.) %>%
rownames_to_column('Name') %>%
dplyr::select(Name, Axis.1:Axis.5) %>%
separate(Name, remove = F, into = c('Sample','U'), sep = '[.]') %>%
left_join(., metadata.pheno, by = 'Name') %>%
mutate(Pheno = ifelse(Phenotype == 'not classified', NA, Phenotype)) %>%
ggplot(aes(Axis.1, Axis.2)) +
geom_point(aes(fill = U, alpha = Pheno),
shape = 21, col = 'black', size = 4) + ggtitle('PcoA Jaccard distance\nnutrient clusters samples per week')
#Sex
bs <- pcoa_jac.week.nut$vectors %>%
as.data.frame(.) %>%
rownames_to_column('Name') %>%
dplyr::select(Name, Axis.1:Axis.5) %>%
separate(Name, remove = F, into = c('Sample','U'), sep = '[.]') %>%
left_join(., metadata.sex, by = 'Name') %>%
mutate(Pheno = ifelse(Sex == 'not classified', NA, Sex)) %>%
ggplot(aes(Axis.1, Axis.2)) +
geom_point(aes(fill = U, alpha = Sex),
shape = 21, col = 'black', size = 4) + ggtitle('PcoA Jaccard distance\nnutrient clusters samples per week')
#visualizations per day
#Phenotype
pcoa_jac.day.nut$vectors %>%
as.data.frame(.) %>%
rownames_to_column('Name') %>%
dplyr::select(Name, Axis.1:Axis.5) %>%
separate(Name, remove = F, into = c('Sample','U'), sep = '[.]') %>%
left_join(., metadata.pheno, by = 'Name') %>%
mutate(Pheno = ifelse(Phenotype == 'not classified', NA, Phenotype)) %>%
ggplot(aes(Axis.1, Axis.2)) +
geom_point(aes(fill = U, alpha = Pheno),
shape = 21, col = 'black', size = 4) + ggtitle('PcoA Jaccard distance\nnutrient clusters samples per day')
#Sex
pcoa_jac.day.nut$vectors %>%
as.data.frame(.) %>%
rownames_to_column('Name') %>%
dplyr::select(Name, Axis.1:Axis.5) %>%
separate(Name, remove = F, into = c('Sample','U'), sep = '[.]') %>%
left_join(., metadata.sex, by = 'Name') %>%
mutate(Pheno = ifelse(Sex == 'not classified', NA, Sex)) %>%
ggplot(aes(Axis.1, Axis.2)) +
geom_point(aes(fill = U, alpha = Sex),
shape = 21, col = 'black', size = 4) + ggtitle('PcoA Jaccard distance\nnutrient clusters samples per day')
pdf(paste0(diet.protocols,'jaccard.pc.pdf'))
library(tidyverse)
library(ape)
library(phyloseq)
library(ggplot2)
library(devtools)
library(factoextra)
# library(GMDecomp)
library(apcluster)
library(plotly)
# library(RFLPtools)
# devtools::install_github("taryue/GMDecomp")
library(Rtsne)
library(FactoMineR)
library(rgr)
library(ggdendro)
# library(DECIPHER)
library(ggpubr)
wd <- '../../'
output_dir = paste0(wd,'results/')
diet.protocols = paste0(output_dir,'diet.protocols/')
data_dir = paste0(wd,'data/')
table_dir = paste0(data_dir, 'tables/')
biom_dir = paste0(data_dir,'silva.feces/')
dir.create(output_dir)
dir.create(table_dir)
keto.bls <- read_tsv(paste0(table_dir, 'keto.bls_04.08.tsv'))
bls.extended <- read_tsv(paste0(table_dir,'bls.extended_01.08.tsv'))
k.bls_prodi <- read_tsv(paste0(table_dir,'k.bls_prodi_13_08.tsv'))
pca.bls <- read_tsv(paste0(table_dir,'pca.bls_14.10.tsv'))
nutr.sum <- read_tsv(paste0(table_dir,'nutr.sum_14.10.tsv'))
# #trees
tree.conv <- read.tree(paste0(table_dir,'tree.conv.19.08.tre'))
tree.keto.bls <- read.tree(paste0(table_dir,'tree.keto.bls.19.08.tre'))
set.seed(73)
keto.bls <- keto.bls[!(keto.bls$item_cat == 'Gewürze, Würzmittel, Hilfsstoffe' ),]##| keto.bls$item_cat =='Menükomponenten'
tmp <- unique(subset(keto.bls,select = c(`item_cat`,`item_subcat`,`item_prodi`))) %>% distinct(.)
r <- tmp
colnames(r) <- c('item_cat.select','item_subcat.select','item_prodi.select')
r <- tidyr::uncount(r, dplyr::n())
# tmp <- tmp[rep(seq_len(nrow(tmp)), nrow(r)), ]
tmp <- purrr::map_dfr(seq_len(1250), ~tmp)##nrow(tmp)/nrow(r)=1044  ##w/o gewürze 1280
tmp <- cbind(tmp,r)
cat.dist <-
tmp %>%
mutate(same_subcat = item_subcat.select == item_subcat,
same_cat = item_cat.select == item_cat) %>%
mutate(total = (as.numeric(!same_cat) + as.numeric(!same_subcat)) / 2) %>%
dplyr::select(item_prodi.select, item_prodi, total) %>%
pivot_wider(names_from = 'item_prodi.select', values_from = 'total') %>%
column_to_rownames('item_prodi') %>%
as.dist(.)
cat.dist[is.na(cat.dist)] <- 0
#cats should all have own node
#respective sub_cats too
d.cat_data <- hclust(cat.dist, method = 'complete')
dend.cat <- as.dendrogram(d.cat_data)
tree.conv <- ape::as.phylo(d.cat_data,use.labels = keto.bls$item_cat)
plot(tree.conv, type= 'fan')
# write.tree(tree.conv, file=paste0(table_dir,'tree.conv.19.08.tre',append = FALSE))
k.bls_prodi$file_name <- gsub(k.bls_prodi$file_name,pattern='u',replacement = 'U') %>% gsub(pattern = '_',replacement = '.')
k.bls_prodi <- k.bls_prodi[k.bls_prodi$database == 'bls',]
k.bls_prodi$Sex[k.bls_prodi$Sex == FALSE] <- 'female'
k.bls_prodi$Sex[is.na(k.bls_prodi$Sex)] <- 0
k.bls_prodi$Sex[k.bls_prodi$Sex == 0] <- 'male'
##weighted UniFrac
df.unifrac <- subset(k.bls_prodi,select=c(`file_name`,`item`,`Energie_bls`,`Energie (kcal)`))
df.unifrac$calculation <- (100/df.unifrac$`Energie_bls`)*df.unifrac$`Energie (kcal)`
##calculation for weighted UniFrac
df.unifrac <- as.data.frame(df.unifrac)
df.unifrac$calculation[is.nan(df.unifrac$calculation)] <-  0
#otu_table generation for weighted UniFrac
otu.unifrac <- subset(df.unifrac,select = c(`item`,`calculation`,`file_name`))
otu.unifrac <- otu.unifrac  %>% group_by(file_name,item) %>% summarize(sum = sum(calculation)) %>% pivot_wider(names_from = 'item',values_from = 'sum') %>% as.data.frame(.)
otu.unifrac[is.na(otu.unifrac)] <- 0
# write_tsv(otu.unifrac,path=paste0(table_dir,'otu.conv.w.19.08.tsv',append=FALSE))
row.names(otu.unifrac) <- otu.unifrac$file_name
otu.unifrac <- otu.unifrac[ ,-1]
otu.weighted <- otu_table(otu.unifrac,taxa_are_rows = FALSE)
#weighted UniFrac
phylo.conv.w <- phyloseq(otu.weighted,tree.conv)
unifrac.keto.conv.w <- UniFrac(phylo.conv.w,weighted = TRUE,fast = TRUE)
pcoa_keto.w <- ape::pcoa(unifrac.keto.conv.w)
##unweighted UniFrac
sub.bell <- k.bls_prodi[!(k.bls_prodi$item_descr=="gemüsepaprika rot"),]
sub.nudels <- k.bls_prodi[!(k.bls_prodi$item_descr=="nudeln (4)"),]
unifrac <- subset(k.bls_prodi,select=c(`file_name`,`item`))
unifrac <- as.data.frame(unifrac)
unifrac <- xtabs(~ item + file_name , data = unifrac)##how often consumed/d
unifrac <- as.data.frame(unifrac)
unifrac <- pivot_wider(data = unifrac, names_from = 'item', values_from = 'Freq') %>% as.data.frame(.)
# write_tsv(unifrac,path=paste0(table_dir,'otu.conv.uw.19.08.tsv',append=FALSE,col_names = TRUE))
row.names(unifrac) <- unifrac$file_name
unifrac <- unifrac[ ,-1]
unifrac <- otu_table(unifrac,taxa_are_rows = FALSE)
#unweighted UniFrac
phylo.conv.uw <- phyloseq(unifrac,tree.conv)
unifrac.keto.conv.uw <- UniFrac(phylo.conv.uw,weighted = FALSE,fast = TRUE)
pcoa_keto.uw <- ape::pcoa(unifrac.keto.conv.uw)
get_explained_variance <- function(pcoa){
return(paste0(round(pcoa$values$Rel_corr_eig *100, 2), '%'))
}
get_explained_variance(pcoa_keto.uw)[1:2]##"11.21%" "8.45%"
get_explained_variance(pcoa_keto.w)[1:2]##"12.69%" "9.66%"
#varinace
pcoa_keto.uw$vectors <- as.data.frame(pcoa_keto.uw$vectors)
pcoa_keto.w$vectors <- as.data.frame(pcoa_keto.w$vectors)
varconvAxis.1 <- var(pcoa_keto.uw$vectors$Axis.1)##0.02851293
varconvAxis.2 <- var(pcoa_keto.uw$vectors$Axis.2)##0.01470678
varconvwAxis.1 <- var(pcoa_keto.w$vectors$Axis.1)##0.04093632
varconvwAxis.2 <- var(pcoa_keto.w$vectors$Axis.2)##0.03483469
##visualization
#Phenotype
p.metadata.conv.uw <-
k.bls_prodi %>%
dplyr::select(file_name:Phenotype) %>%
distinct() %>%
dplyr::rename(Name = file_name)
conv.uw.pheno <- pcoa_keto.uw$vectors %>%  #or pcoa_keto.w/pcoa_nutr.w or pcoa_nutr.uw
as.data.frame(.) %>%
rownames_to_column('Name') %>%
dplyr::select(Name, Axis.1:Axis.5) %>%
separate(Name, remove = F, into = c('Sample','U'), sep = '[.]') %>%
left_join(., p.metadata.conv.uw, by = 'Name') %>%
mutate(Pheno = ifelse(Phenotype == 'not classified', NA, Phenotype)) %>%
ggplot(aes(Axis.1, Axis.2)) +
geom_point(aes(fill = U, alpha = Pheno),
shape = 21, col = 'black', size = 4) + ggtitle('PcoA unweighted UniFrac conventional clusters')+ theme(plot.title = element_text(size=10))
#Sex
s.metadata.conv.uw <-
k.bls_prodi %>%
dplyr::select(file_name:Sex) %>%
distinct() %>%
dplyr::rename(Name = file_name)
conv.uw.sex <- pcoa_keto.uw$vectors %>%  #or pcoa_keto.w/pcoa_nutr.w or pcoa_nutr.uw
as.data.frame(.) %>%
rownames_to_column('Name') %>%
dplyr::select(Name, Axis.1:Axis.5) %>%
separate(Name, remove = F, into = c('Sample','U'), sep = '[.]') %>%
left_join(., s.metadata.conv.uw, by = 'Name') %>%
mutate(sex = ifelse(Sex == 'not classified', NA, Sex)) %>%
# mutate(sex = ifelse(Sex == 'female', FALSE, Sex)) %>%
ggplot(aes(Axis.1, Axis.2)) +
geom_point(aes(fill = U, alpha = Sex),
shape = 21, col = 'black', size = 4) + ggtitle('PcoA unweighted UniFrac conventional clusters')+ theme(plot.title = element_text(size=10))##FALSE female
#Phenotype
p.metadata.conv.w <-
k.bls_prodi %>%
dplyr::select(file_name:Phenotype) %>%
distinct() %>%
dplyr::rename(Name = file_name)
conv.w.pheno <- pcoa_keto.w$vectors %>%  #/pcoa_nutr.w or pcoa_nutr.uw
as.data.frame(.) %>%
rownames_to_column('Name') %>%
dplyr::select(Name, Axis.1:Axis.5) %>%
separate(Name, remove = F, into = c('Sample','U'), sep = '[.]') %>%
left_join(., p.metadata.conv.w, by = 'Name') %>%
mutate(Pheno = ifelse(Phenotype == 'not classified', NA, Phenotype)) %>%
ggplot(aes(Axis.1, Axis.2)) +
geom_point(aes(fill = U, alpha = Pheno),
shape = 21, col = 'black', size = 4) + ggtitle('PcoA weighted UniFrac conventional clusters')+ theme(plot.title = element_text(size=10))
#Sex
s.metadata.conv.w <-
k.bls_prodi %>%
dplyr::select(file_name:Sex) %>%
distinct() %>%
dplyr::rename(Name = file_name)
conv.w.sex <- pcoa_keto.w$vectors %>%  #/pcoa_nutr.w or pcoa_nutr.uw
as.data.frame(.) %>%
rownames_to_column('Name') %>%
dplyr::select(Name, Axis.1:Axis.5) %>%
separate(Name, remove = F, into = c('Sample','U'), sep = '[.]') %>%
left_join(., s.metadata.conv.w, by = 'Name') %>%
mutate(Pheno = ifelse(Sex == 'not classified', NA, Sex)) %>%
ggplot(aes(Axis.1, Axis.2)) +
geom_point(aes(fill = U, alpha = Sex),
shape = 21, col = 'black', size = 4) + ggtitle('PcoA weighted UniFrac conventional clusters')+ theme(plot.title = element_text(size=10))
#unweighted UniFrac per day
otu.unweighted.samp <- subset(k.bls_prodi,select=c(`file_name`,`item`,`day`))
otu.unweighted.samp$sample_day <- paste(otu.unweighted.samp$file_name,otu.unweighted.samp$day)
otu.unweighted.samp <- otu.unweighted.samp[ ,-c(1)]
otu.unweighted.samp <- as.data.frame(otu.unweighted.samp)
otu.unweighted.samp <- xtabs(~ item + sample_day , data = otu.unweighted.samp)##how often consumed/d
otu.unweighted.samp <- as.data.frame(otu.unweighted.samp)
otu.unweighted.samp <- pivot_wider(data = otu.unweighted.samp, names_from = 'item', values_from = 'Freq') %>% as.data.frame(.)
# write_tsv(otu.unweighted.samp,path=paste0(table_dir,'otu.conv.uw.samp.19.08.tsv',append=FALSE))
row.names(otu.unweighted.samp) <- otu.unweighted.samp$sample_day
otu.unweighted.samp <- otu.unweighted.samp[ ,-1]
otu.unweighted.samp <- otu_table(otu.unweighted.samp,taxa_are_rows = FALSE)
phylo.conv.uw.samp <- phyloseq(otu.unweighted.samp,tree.conv)
unifrac.keto.conv.uw.samp <- UniFrac(phylo.conv.uw.samp,weighted = FALSE,fast = TRUE)
pcoa_keto.uw.samp <- ape::pcoa(unifrac.keto.conv.uw.samp)
##visualization
#Phenotype
p.metadata.conv.uw.samp <-
k.bls_prodi %>%
dplyr::select(file_name:Phenotype) %>%
distinct() %>%
rename(Name = file_name)
pcoa_keto.uw.samp$vectors %>%  #or pcoa_keto.w/pcoa_nutr.w or pcoa_nutr.uw
as.data.frame(.) %>%
rownames_to_column('Name') %>%
dplyr::select(Name, Axis.1:Axis.5) %>%
separate(Name, remove = F, into = c('Sample','U'), sep = '[.]') %>%
left_join(., p.metadata.conv.uw.samp, by = 'Name') %>%
mutate(Pheno = ifelse(Phenotype == 'not classified', NA, Phenotype)) %>%
ggplot(aes(Axis.1, Axis.2)) +
geom_point(aes(fill = U, alpha = Pheno),
shape = 21, col = 'black', size = 4) + ggtitle('PcoA unweighted UniFrac conventional clusters')
#weighted UniFrac per day
df.unifrac.samp <- subset(k.bls_prodi,select=c(`file_name`,`item`,`Energie_bls`,`Energie (kcal)`,`day`))
##calculation for weighted UniFrac
df.unifrac.samp$calculation <- apply(X=df.unifrac.samp,MARGIN=2,FUN=function(line){(100/df.unifrac$`Energie_bls`)*df.unifrac$`Energie (kcal)`})
df.unifrac.samp <- as.data.frame(df.unifrac.samp)
df.unifrac.samp$sample_day <- paste(df.unifrac.samp$file_name,df.unifrac.samp$day)
df.unifrac.samp <- df.unifrac.samp[ ,-c(1)]
#otu_table generation for weighted UniFrac
otu.unifrac.samp <- subset(df.unifrac.samp,select = c(`item`,`calculation`,`sample_day`))
otu.unifrac.samp <- otu.unifrac.samp %>% group_by(item,sample_day) %>% summarize(sum = sum(calculation)) %>% pivot_wider(names_from = 'item',values_from = 'sum') %>% as.data.frame(.)
otu.unifrac.samp[is.na(otu.unifrac.samp)] <- 0
row.names(otu.unifrac.samp) <- otu.unifrac.samp$sample_day
otu.unifrac.samp <- otu.unifrac.samp[ ,-1]
otu.weighted.samp <- otu_table(otu.unifrac.samp,taxa_are_rows = FALSE)
phylo.conv.w.samp <- phyloseq(otu.weighted.samp,tree.conv)
unifrac.keto.conv.w.samp <- UniFrac(phylo.conv.w.samp,weighted = FALSE,fast = TRUE)
pcoa_keto.w.samp <- ape::pcoa(unifrac.keto.conv.w.samp)
