"0","pa.pheno <- plant.animal.w %>% group_by(file_name,percent.animal,percent.plant)"
"0","pa.pheno <- subset(pa.pheno,select = c(`Phenotype`,`file_name`,`percent.plant`,`percent.animal`))"
"0",""
"0","pa.pheno <- pa.pheno  %>%"
"0","  group_by(file_name,Phenotype) %>%"
"0","    summarise(percent.plant = unique(percent.plant[percent.plant!=0]), "
"0","              percent.animal = unique(percent.animal[percent.animal!=0]))"
"2","`summarise()` has grouped output by 'file_name'. You can override using the `.groups` argument.
"
"0","pa.pheno$group <- ifelse(grepl('U2', pa.pheno$file_name), 'U2', 'U1')"
"0","pa.pheno$group <- ifelse(grepl('U2',pa.pheno$group),'keto','non-keto')"
"0",""
"0","#remove not classified and NA"
"0",""
"0","pa.pheno <- pa.pheno[pa.pheno$Phenotype != 'not classified', ] "
"0","pa.pheno <- pa.pheno[complete.cases(pa.pheno), ]"
"0",""
"0","##summary statistics"
"0","pa.pheno.low <- pa.pheno[grepl('low',pa.pheno$Phenotype),]"
"0","summary(pa.pheno.low$percent.animal)"
"1","   Min. "
"1","1st Qu. "
"1"," Median "
"1","   Mean "
"1","3rd Qu. "
"1","   Max. "
"1","
"
"1","  23.09 "
"1","  29.76 "
"1","  34.43 "
"1","  42.81 "
"1","  54.04 "
"1","  75.53 "
"1","
"
"0","sd(pa.pheno.low$percent.animal)"
"1","[1]"
"1"," 17.73854"
"1","
"
"0","pa.pheno.high <- pa.pheno[grepl('high',pa.pheno$Phenotype),]"
"0","summary(pa.pheno.high$percent.animal)"
"1","   Min. "
"1","1st Qu. "
"1"," Median "
"1","   Mean "
"1","3rd Qu. "
"1","   Max. "
"1","
"
"1","  16.61 "
"1","  34.77 "
"1","  46.40 "
"1","  45.43 "
"1","  53.86 "
"1","  95.80 "
"1","
"
"0","sd(pa.pheno.high$percent.animal)"
"1","[1]"
"1"," 15.79844"
"1","
"
"0","# pa.pheno.not <- pa.pheno[grepl('not',pa.pheno$Phenotype),]"
"0","# summary(pa.pheno.not$percent.animal)"
"0","# sd(pa.pheno.not$percent.animal)"
"0","# write_tsv(pa.pheno,paste0(table_dir,'plant.animal.processed.tsv'))"
"0",""
"0","#boxplots"
"0",""
"0","pheno.p <- ggplot(pa.pheno,aes(x=Phenotype, y=percent.plant, fill=group)) +"
"0","  geom_boxplot() +ylim(0,100)  + stat_compare_means(comparison = list(c('high converter','low converter')),hide.ns = FALSE)#"
"0","# + geom_signif(comparison = list(c('high converter','low converter')),map_signif_level = TRUE,test = 'wilcox.test')"
"0",""
"0","pheno.a <- ggplot(pa.pheno,aes(x=Phenotype, y=percent.animal, fill=group)) +"
"0","  geom_boxplot()+ylim(0,100) + stat_compare_means(comparison = list(c('high converter','low converter')),hide.ns = FALSE)#"
"0","# + geom_signif(comparison = list(c('high converter','low converter')),map_signif_level = TRUE,test = 'wilcox.test')"
"0",""
"0","pheno.ag <- ggplot(pa.pheno,aes(x=group, y=percent.animal, fill=Phenotype)) +"
"0","  geom_boxplot()+ylim(0,100) + geom_jitter(shape = 21)  + stat_compare_means(comparison = list(c('U1','U2')),hide.ns = FALSE)#"
"0","# + geom_signif(comparison = list(c('U1','U2')),map_signif_level = TRUE,test = 'wilcox.test')"
"0",""
"0","pheno.pg <- ggplot(pa.pheno,aes(x=group, y=percent.plant, fill=Phenotype)) +"
"0","  geom_boxplot()+ylim(0,100)+geom_jitter(shape = 21) + stat_compare_means(comparison = list(c('U1','U2')),hide.ns = FALSE)#p.format"
"0","# + geom_signif(comparison = list(c('U1','U2')),map_signif_level = TRUE,test = 'wilcox.test')"
"0",""
"0","#only U1"
"0"," symnum.args <- list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 1), symbols = c(""****"", ""***"", ""**"", ""*"", ""ns""))"
"0"," "
"0","pa.pheno.u1 <- subset(pa.pheno,grepl(""U1"",file_name))"
"0",""
"0","pheno.u1.p <- ggplot(pa.pheno.u1,aes(x=Phenotype, y=percent.plant)) +"
"0","  geom_boxplot()+ylim(0,100) + stat_compare_means(comparison = list(c('high converter','low converter')),hide.ns = FALSE,symnum.args = symnum.args)+ggtitle('non-keto diet')"
"0","#"
"0","# +geom_signif(comparison = list(c('high converter','low converter')),map_signif_level = TRUE,test = 'wilcox.test')"
"0","  "
"0",""
"0","pheno.u1.a <- ggplot(pa.pheno.u1,aes(x=Phenotype, y=percent.animal)) +"
"0","  geom_boxplot()+ylim(0,100) + stat_compare_means(comparison = list(c('high converter','low converter')),hide.ns = FALSE,symnum.args = symnum.args)+ggtitle('non-keto diet')"
"0","#"
"0","# +geom_signif(comparison = list(c('high converter','low converter')),map_signif_level = TRUE,test = 'wilcox.test')"
"0",""
"0","#only U2"
"0",""
"0","pa.pheno.u2 <- subset(pa.pheno,grepl(""U2"",file_name))"
"0",""
"0","pheno.u2.p <- ggplot(pa.pheno.u2,aes(x=Phenotype, y=percent.plant)) +"
"0","  geom_boxplot()+ylim(0,100)+ stat_compare_means(comparison = list(c('high converter','low converter')),hide.ns = FALSE,symnum.args = symnum.args)+ggtitle('keto diet')"
"0","#"
"0","  # +geom_signif(comparison = list(c('high converter','low converter')),map_signif_level = TRUE, test = 'wilcox.test')"
"0",""
"0",""
"0","pheno.u2.a <- ggplot(pa.pheno.u2,aes(x=Phenotype, y=percent.animal)) +"
"0","  geom_boxplot()+ylim(0,100) + stat_compare_means(comparison = list(c('high converter','low converter')),hide.ns = FALSE,symnum.args = symnum.args)+ggtitle('keto diet')"
"0","#"
"0","# +geom_signif(comparison = list(c('high converter','low converter')),map_signif_level = TRUE, test = 'wilcox.test')"
"0",""
"0","phenotype.group.animal.plant <- ggarrange(pheno.u1.p,pheno.u1.a,pheno.u2.p,pheno.u2.a, "
"0","          labels = c(""A"", ""B"",""C"",""D""),"
"0","          ncol = 2, nrow = 2)"
"0",""
"0","#entire data high and low converters"
"0",""
"0","pheno.aa <- ggplot(pa.pheno,aes(x=Phenotype, y=percent.animal)) +"
"0","  geom_boxplot()+ylim(0,100)+geom_jitter(shape = 21)+ stat_compare_means(comparison = list(c('high converter','low converter')),hide.ns = FALSE,symnum.args = symnum.args)"
"0",""
"0","# + stat_compare_means(comparison = list(c('high converter','low converter')),hide.ns = TRUE)#"
"0",""
"0","pheno.ap <- ggplot(pa.pheno,aes(x=Phenotype, y=percent.plant)) +"
"0","  geom_boxplot()+ylim(0,100)+geom_jitter(shape = 21)+ stat_compare_means(comparison = list(c('high converter','low converter')),hide.ns = FALSE,symnum.args = symnum.args) #"
"0",""
"0","phenotype.animal.plant <- ggarrange(pheno.aa,pheno.ap,ap,pp, "
"0","          labels = c(""A"",""B"",""C"",""D""),"
"0","          ncol = 2, nrow = 2)"
"0",""
