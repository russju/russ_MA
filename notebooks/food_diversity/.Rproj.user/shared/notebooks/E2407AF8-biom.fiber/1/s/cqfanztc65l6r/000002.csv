"0","```r
```r
#x axis log2 correlation

# cor.test.log.fiber <- log2(r.cor.fiber) %>% as.numeric(.)
# cor.test.log.fiber [is.nan(cor.test.log.fiber)] <- 0
# cor.test.log.fiber [is.infinite(cor.test.log.fiber)] <- 0
# cor.test.log.fiber <- as.data.frame(cor.test.log.fiber)

r.cor.fiber[is.nan(r.cor.fiber)] <- 0
r.cor.fiber[is.infinite(r.cor.fiber)] <- 0
r.cor.fiber <- as.data.frame(r.cor.fiber)

#y axis -log10 p.value

p.adj.log.fiber <- -log10(p.adj.fiber)
p.adj.log.fiber[is.infinite(p.adj.log.fiber)] <- 0
p.adj.log.fiber <- as.data.frame(p.adj.log.fiber)

cor.test.adj.fiber <- cbind(cor.test.fiber[ ,c(1,3)],p.adj.log.fiber) %>% cbind(.,r.cor.fiber) %>% as.data.frame(.)
colnames(cor.test.adj.fiber) <- c('taxa','nutrient','p.adj.log','estimate')

#volcano plot ggplot()

vp.fiber <- ggplot(cor.test.adj.fiber,
    aes(x = `estimate`, y = `p.adj.log`)) +
  geom_point() +
  ggtitle(\Volcano plot\) +
  xlab(\correlation\) + 
  ylab(\-log10 adjusted p-value\)

# ggplotly(vp,tooltip = c('x','y','taxa','nutrient'))

```
```"
