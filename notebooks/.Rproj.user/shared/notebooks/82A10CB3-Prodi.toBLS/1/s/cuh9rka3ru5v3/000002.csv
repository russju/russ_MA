"0","##bls.extended: bls with merged and recipe keto"
"0","##keto.samples: original keto samples"
"0",""
"0","sub.bls.extended <- bls.extended[!is.na(bls.extended$item_prodi), ]##only prodi items in bls.extended"
"0","sub.bls.extended <- subset(sub.bls.extended,select = c(`Eiweiß, Proteingehalt`,`Kohlenhydrate`,`Fett`,`Vitamin B9 gesamte Folsäure`,`Vitamin B7 Biotin (Vitamin H)`,`Ballaststoffe`,`Vitamin B12 Cobalamin`,`Vitamin K Phyllochinon`,`Vitamin B3 Niacinäquivalent`,`Vitamin A Retinoläquivalent`,`Eisen`,`Vitamin B6 Pyridoxin`,`Gesättigte Fettsäuren`,`EPA - Eicosapentaensäure`,`Vitamin E Tocopherol`,`Vitamin B5 Pantothensäure`,`Vitamin E Tocopherol`,`Calcium`,`DHA - Docosahexaensäure`,`Iodid`,`Vitamin B2 Riboflavin`,`Cholesterin`,`Vitamin C Ascorbinsäure`,`Einfach ungesättigte Fettsäuren`,`Octadecatriensäure/Linolensäure`,`Octadecadiensäure/Linolsäure`,`Vitamin B1 Thiamin`,`Vitamin D Calciferole`,`Alkohol (Ethanol)`,`Energie (kcal)`,`Energie, Gesamt (kcal)`))##only prodi nutrients"
"0","# sub.bls.extended <-sub.bls.extended[which(rowSums(sub.bls.extended) > 0),] "
"0","# %>%"
"0","# mutate_at(.vars = vars(`Energie (kcal)`:`Energie, Gesamt (kcal)`))"
"0",""
"0","# "
"0","keto.bls$item <- tolower(keto.bls$item)"
"0","keto.bls <-keto.bls[which(rowSums(subset(keto.bls,select = `Energie (kcal)`:`Vitamin B3 Niacinäquivalent`)) > 0),]##rm rows with only zeros"
"0","# infs <- apply(keto.bls, 2, is.infinite)"
"0","# rowswithinf <- rowSums(infs) > 0"
"0","# keto.bls <- keto.bls[!rowswithinf, ]"
"0","sub.keto.bls <- subset(keto.bls,select = `Energie (kcal)`:`Vitamin B3 Niacinäquivalent`)"
"0",""
"0","# without the following prcomp() does not work"
"0","infs <- apply(sub.keto.bls, 2, is.infinite)"
"0","rowswithinf <- rowSums(infs) > 0"
"0","#sub.keto.bls[infs]  #handle infinite rows"
"0","#sub.keto.bls[rowswithinf, ]  #Handle infinite rows"
"0","sub.keto.bls <- sub.keto.bls[!rowswithinf, ]###one row gets removed"
"0","keto.bls <- keto.bls[!rowswithinf, ]"
"0","# Handle columns that almost only have 1 value:"
"0","# nzv <- sapply(sub.keto.bls, var) < 10^-13"
"0","# sub.keto.bls <- sub.keto.bls[, !nzv]"
"0",""
"0","#  fun.12 <- function(x.1,x.2,...){"
"0","#      x.1p <- do.call(""paste"", x.1)"
"0","#      x.2p <- do.call(""paste"", x.2)"
"0","#      x.1[! x.1p %in% x.2p, ]"
"0","#  }"
"0","# row <- fun.12(keto.bls,sub.keto.bls,)"
"0",""
"0","pca.bls.extended <- prcomp(x=sub.bls.extended)##with bls merged and recipe protocols"
"0","pca.keto.bls <- prcomp(x=sub.keto.bls[ ,-1])##original keto protocols"
"0",""
"0","colorby <- keto.bls$item ##prodi items "
"0","#visualize pcas"
"0","bls = pca.bls.extended$x %>%"
"0","  as.data.frame"
"0","samples = pca.keto.bls$x %>%"
"0","  as.data.frame"
"0",""
"0","#each in an own gragh"
"0","bls.plot <- ggplot(bls,aes(x=PC1,y=PC2))+geom_point(colour='black') +"
"0","  theme(panel.background = element_blank())+"
"0","  theme(plot.background = element_blank())"
"0","samples.plot <- ggplot(samples,aes(x=PC1,y=PC2))+geom_point(colour='red') +"
"0","  theme(panel.background = element_blank())+"
"0","  theme(plot.background = element_blank())"
"0",""
"0","#together"
"0","validate.plot <- ggplot(samples,aes(x=PC1,y=PC2)) +geom_point(colour='black') +geom_point(data=bls,colour='green') +"
"0","  theme(panel.background = element_blank())+"
"0","  theme(plot.background = element_blank())+"
"0","  geom_line(aes(group=colorby))+"
"0","  xlab('dim 1')+"
"0","  ylab('dim 2')+"
"0","  ggtitle('comparing keto diets before and after merging')+"
"0","  theme(legend.position=""top"")  "
"0",""
"0","#interactive"
"0","fig_samples <- plot_ly(samples,x = ~PC1,y = ~PC2, type = 'scatter',mode = 'markers',"
"0","                       color = I('red')) "
"0","fig_samples <- fig_samples %>%"
"0","  add_trace("
"0","    text = colorby,"
"0","    hoverinfo = 'text',"
"0","    showlegend = F,"
"0","    type = 'scatter'"
"0","  )"
"0",""
"0","text <- bls.extended[!is.na(bls.extended$item_prodi), ]"
"0","fig_bls <- plot_ly(bls,x = ~PC1,y = ~PC2, type = 'scatter',mode = 'markers',color = I('blue')) "
"0","fig_bls <- fig_bls %>%"
"0","  add_trace("
"0","    text = text$item_prodi,"
"0","    hoverinfo = 'text',"
"0","    showlegend = F,"
"0","    type = 'scatter'"
"0","  )"
"0",""
"0","samples_main <- as.data.frame(cbind(samples$PC1,samples$PC2))"
"0","samples_main$source <- rep('samples',nrow(samples_main))"
"0","bls_main <- as.data.frame(cbind(bls$PC1,bls$PC2))"
"0","bls_main$source <- rep('bls',nrow(bls_main))"
"0","merge <- rbind(samples_main,bls_main) %>% as.data.frame(.)"
"0",""
"0","fig <- plot_ly(merge, x = ~V1, color = I(""red""))"
"0","fig <- fig %>% add_markers(y = ~V2, text = colorby, showlegend = FALSE)"
"0","fig <- fig %>% add_lines(y = ~fitted(loess(PC1 ~ PC2)),"
"0","            line = list(color = 'black'), showlegend = TRUE)"
"0"," "
"0",""
"0","final <- plot_ly(merge, x = ~V1, y = ~V2, color = ~source)"
"0","final <- final %>% add_markers(text = c(text$item_prodi,colorby),showlegend = FALSE) %>%"
"0","  add_lines(.,labels(c(text$item_prodi,colorby)))"
"0",""
