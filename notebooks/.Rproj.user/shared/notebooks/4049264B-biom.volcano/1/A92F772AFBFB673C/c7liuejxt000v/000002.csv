"0","#x axis log2 correlation"
"0",""
"0","# cor.test.log.L6 <- log2(r.cor.L6) %>% as.numeric(.)"
"0","# cor.test.log.L6[is.nan(cor.test.log.L6)] <- 0"
"0","# cor.test.log.L6[is.infinite(cor.test.log.L6)] <- 0"
"0","# cor.test.log.L6 <- as.data.frame(cor.test.log.L6)"
"0",""
"0","r.cor.L6[is.nan(r.cor.L6)] <- 0"
"0","r.cor.L6[is.infinite(r.cor.L6)] <- 0"
"0","r.cor.L6 <- as.data.frame(r.cor.L6)"
"0",""
"0","#y axis -log10 p.value"
"0",""
"0","p.adj.log.L6 <- -log10(p.adj.L6)"
"0","p.adj.log.L6[is.infinite(p.adj.log.L6)] <- 0"
"0","p.adj.log.L6 <- as.data.frame(p.adj.log.L6)"
"0",""
"0","cor.test.adj.L6 <- cbind(cor.test.L6[ ,c(1,2)],p.adj.log.L6) %>% cbind(.,r.cor.L6) %>% as.data.frame(.)"
"0","colnames(cor.test.adj.L6) <- c('nutrient','taxa','p.adj.log','estimate')"
"0",""
"0","sig.L6 <- cor.test.adj.L6[cor.test.adj.L6$p.adj.log <= 0.050 & cor.test.adj.L6$p.adj.log > 0.00000,]"
"0","top.sig.L6 <- sig.L6[order(-sig.L6$p.adj.log ),][1:11,]"
"0",""
"0","#volcano plot ggplot()"
"0",""
"0","vp.L6 <- ggplot(cor.test.adj.L6,"
"0","    aes(x = `estimate`, y = `p.adj.log`)) +"
"0","  geom_point() +"
"0","  ggtitle(""Volcano plot"") +"
"0","  xlab(""correlation"") + "
"0","  ylab(""-log10 adjusted p-value"")"
"0",""
"0","vp.L6 <- vp.L6+xlim(c(-1,1))"
"0",""
"0","# ggplotly(vp.L6,tooltip = c('x','y','text'))"
"0",""
"0",""
