"0","#L6 nutr"
"0","cor.test.L6.nutr <- merge.L6.biom.nutr %>% "
"0","  pivot_longer(names_to = ""variable_right"", values_to = ""value_right"", `Shannon Index L6`) %>% "
"0","  pivot_longer(names_to = ""variable_left"", values_to = ""value_left"", `menue compounds (1)`:`sweets (15)`) %>% "
"0","  group_by(variable_left, variable_right) %>% "
"0","  "
"0","  summarise(p.value = broom::tidy(cor.test(value_left, value_right))$p.value,"
"0","         estimate = broom::tidy(cor.test(value_left, value_right))$estimate)"
"2","`summarise()` regrouping output by 'variable_left' (override with `.groups` argument)
"
"0","cor.test.L6.nutr[is.na(cor.test.L6.nutr )] <- 0"
"0",""
"0","p.adj.L6.nutr <- subset(cor.test.L6.nutr ,select = `p.value`) %>% data.matrix(.) %>% p.adjust(.,method = 'fdr')"
"0","r.cor.L6.nutr <- subset(cor.test.L6.nutr ,select = `estimate`) %>% data.matrix(.)"
"0",""
"0","#x axis log2 correlation"
"0",""
"0","cor.test.log.L6.nutr <- log2(r.cor.L6.nutr) %>% as.numeric(.)"
"2","NaNs wurden erzeugt"
"0","cor.test.log.L6.nutr [is.nan(cor.test.log.L6.nutr)] <- 0"
"0","cor.test.log.L6.nutr [is.infinite(cor.test.log.L6.nutr)] <- 0"
"0","cor.test.log.L6.nutr <- as.data.frame(cor.test.log.L6.nutr)"
"0",""
"0","r.cor.L6.nutr[is.nan(r.cor.L6.nutr)] <- 0"
"0","r.cor.L6.nutr[is.infinite(r.cor.L6.nutr)] <- 0"
"0","r.cor.L6.nutr <- as.data.frame(r.cor.L6.nutr)"
"0",""
"0","#y axis -log10 p.value"
"0",""
"0","p.adj.log.L6.nutr <- -log10(p.adj.L6.nutr)"
"0","p.adj.log.L6.nutr [is.infinite(p.adj.log.L6.nutr )] <- 0"
"0","p.adj.log.L6.nutr  <- as.data.frame(p.adj.log.L6.nutr )"
"0",""
"0","cor.test.adj.L6.nutr <- cbind(cor.test.L6.nutr[ ,c(1,2)],p.adj.L6.nutr) %>% cbind(.,r.cor.L6.nutr) %>% as.data.frame(.)"
"2","New names:
* NA -> ...3
"
"0","colnames(cor.test.adj.L6.nutr) <- c('nutr cluster','Shannon Index genus','p.adj.log','estimate')"
"0",""
"0","# write_tsv(cor.test.adj.L6.nutr,'C:/Users/Juliane/Desktop/project.directory/data/tables/corr.nutrclust.shannon.tsv')"
"0",""
"0","sig.L6.nutr <- cor.test.adj.L6.nutr[cor.test.adj.L6.nutr$p.adj.log <= 0.050 & cor.test.adj.L6.nutr$p.adj.log > 0.00000,]"
"0","top.sig.L6.nutr <- cor.test.adj.L6.nutr[order(-cor.test.adj.L6.nutr$p.adj.log ),]"
"0",""
"0","#L2 nutr"
"0","cor.test.L2.nutr <- merge.L2.biom.nutr %>% "
"0","  pivot_longer(names_to = ""variable_right"", values_to = ""value_right"", `Shannon Index L2`) %>% "
"0","  pivot_longer(names_to = ""variable_left"", values_to = ""value_left"", `menue compounds (1)`:`sweets (15)`) %>% "
"0","  group_by(variable_left, variable_right) %>% "
"0","  "
"0","  summarise(p.value = broom::tidy(cor.test(value_left, value_right))$p.value,"
"0","         estimate = broom::tidy(cor.test(value_left, value_right))$estimate)"
"2","`summarise()` regrouping output by 'variable_left' (override with `.groups` argument)
"
"0","cor.test.L2.nutr[is.na(cor.test.L2.nutr )] <- 0"
"0",""
"0","p.adj.L2.nutr <- subset(cor.test.L2.nutr ,select = `p.value`) %>% data.matrix(.) %>% p.adjust(.,method = 'fdr')"
"0","r.cor.L2.nutr <- subset(cor.test.L2.nutr ,select = `estimate`) %>% data.matrix(.)"
"0",""
"0","#x axis log2 correlation"
"0",""
"0","cor.test.log.L2.nutr <- log2(r.cor.L2.nutr) %>% as.numeric(.)"
"2","NaNs wurden erzeugt"
"0","cor.test.log.L2.nutr [is.nan(cor.test.log.L2.nutr)] <- 0"
"0","cor.test.log.L2.nutr [is.infinite(cor.test.log.L2.nutr)] <- 0"
"0","cor.test.log.L2.nutr <- as.data.frame(cor.test.log.L2.nutr)"
"0",""
"0","r.cor.L2.nutr[is.nan(r.cor.L2.nutr)] <- 0"
"0","r.cor.L2.nutr[is.infinite(r.cor.L2.nutr)] <- 0"
"0","r.cor.L2.nutr <- as.data.frame(r.cor.L2.nutr)"
"0",""
"0","#y axis -log10 p.value"
"0",""
"0","p.adj.log.L2.nutr <- -log10(p.adj.L2.nutr)"
"0","p.adj.log.L2.nutr [is.infinite(p.adj.log.L2.nutr )] <- 0"
"0","p.adj.log.L2.nutr  <- as.data.frame(p.adj.log.L2.nutr )"
"0",""
"0","cor.test.adj.L2.nutr <- cbind(cor.test.L2.nutr[ ,c(1,3)],p.adj.L2.nutr) %>% cbind(.,r.cor.L2.nutr) %>% as.data.frame(.)"
"2","New names:
* NA -> ...3
"
"0","colnames(cor.test.adj.L2.nutr) <- c('nutr cluster','Shannon Index phylum','p.adj.log','estimate')"
"0",""
"0",""
"0","sig.L2.nutr <- cor.test.adj.L2.nutr[cor.test.adj.L2.nutr$p.adj.log <= 0.050 & cor.test.adj.L2.nutr$p.adj.log > 0.00000,]"
"0","top.sig.L2.nutr <- cor.test.adj.L2.nutr[order(-cor.test.adj.L2.nutr$p.adj.log ),]"
"0",""
"0",""
"0","#family nutr"
"0","cor.test.fam.nutr <- merge.L6.fam.nutr %>%"
"0","  pivot_longer(names_to = ""variable_right"", values_to = ""value_right"", `Shannon Index L6`) %>%"
"0","  pivot_longer(names_to = ""variable_left"", values_to = ""value_left"", `menue compounds (1)`:`sweets (15)`) %>%"
"0","  group_by(variable_left, variable_right) %>%"
"0",""
"0","  summarise(p.value = broom::tidy(cor.test(value_left, value_right))$p.value,"
"0","         estimate = broom::tidy(cor.test(value_left, value_right))$estimate)"
"2","`summarise()` regrouping output by 'variable_left' (override with `.groups` argument)
"
"0","cor.test.fam.nutr[is.na(cor.test.fam.nutr )] <- 0"
"0",""
"0","p.adj.fam.nutr <- subset(cor.test.fam.nutr ,select = `p.value`) %>% data.matrix(.) %>% p.adjust(.,method = 'fdr')"
"0","r.cor.fam.nutr <- subset(cor.test.fam.nutr ,select = `estimate`) %>% data.matrix(.)"
"0",""
"0","#x axis log2 correlation"
"0",""
"0","cor.test.log.fam.nutr <- log2(r.cor.fam.nutr) %>% as.numeric(.)"
"2","NaNs wurden erzeugt"
"0","cor.test.log.fam.nutr [is.nan(cor.test.log.fam.nutr)] <- 0"
"0","cor.test.log.fam.nutr [is.infinite(cor.test.log.fam.nutr)] <- 0"
"0","cor.test.log.fam.nutr <- as.data.frame(cor.test.log.fam.nutr)"
"0",""
"0","r.cor.fam.nutr[is.nan(r.cor.fam.nutr)] <- 0"
"0","r.cor.fam.nutr[is.infinite(r.cor.fam.nutr)] <- 0"
"0","r.cor.fam.nutr <- as.data.frame(r.cor.fam.nutr)"
"0",""
"0","#y axis -log10 p.value"
"0",""
"0","p.adj.log.fam.nutr <- -log10(p.adj.fam.nutr)"
"0","p.adj.log.fam.nutr [is.infinite(p.adj.log.fam.nutr )] <- 0"
"0","p.adj.log.fam.nutr  <- as.data.frame(p.adj.log.fam.nutr )"
"0",""
"0","cor.test.adj.fam.nutr <- cbind(cor.test.fam.nutr[ ,c(1,2)],p.adj.fam.nutr) %>% cbind(.,r.cor.fam.nutr) %>% as.data.frame(.)"
"2","New names:
* NA -> ...3
"
"0","colnames(cor.test.adj.fam.nutr) <- c('nutr cluster','Shannon Index family','p.adj.log','estimate')"
"0",""
"0","sig.fam.nutr <- cor.test.adj.fam.nutr[cor.test.adj.fam.nutr$p.adj.log <= 0.050 & cor.test.adj.fam.nutr$p.adj.log > 0.00000,]"
"0","top.sig.fam.nutr <- cor.test.adj.fam.nutr[order(-cor.test.adj.fam.nutr$p.adj.log ),]"
"0",""
