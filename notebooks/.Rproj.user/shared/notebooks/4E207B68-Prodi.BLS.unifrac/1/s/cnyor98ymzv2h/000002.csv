"0","set.seed(73)"
"0","# bls.extended:bls with prodi; normalized to 100g"
"0","# dend.keto.bls <- subset(bls.extended,select = c(`Eiweiß, Proteingehalt`: `Energie, Gesamt (kcal)`,`item_prodi`)) %>% dist(.,method = 'euclidean') %>% hclust(.,method = 'complete')##tip labels"
"0",""
"0","#bls items have NA in column 'item_prodi'"
"0",""
"0","# bls.extended.prodi <- bls.extended[!is.na(bls.extended$item_prodi), ]"
"0","bls.extended$item_prodi[is.na(bls.extended$item_prodi)] <- 'no prodi'"
"0",""
"0","dend.keto.bls <- bls.extended %>% "
"0","  dplyr::select(item_descr, "
"0","         `Eiweiß, Proteingehalt`:`Energie, Gesamt (kcal)`) %>%"
"0","  distinct() %>%"
"0","  "
"0","  # fix exception in data:"
"0","  # wrap gefüllt mit salat und hähnchenfleisch"
"0","  "
"0","  # filter(item_descr != 'wrap gefüllt mit salat und hähnchenfleisch') %>%"
"0","  "
"0","  column_to_rownames('item_descr') %>%"
"0","  dist(.,method = 'euclidean') %>% "
"0","  hclust(.,method = 'complete')"
"0",""
"0","tree.keto.bls <- ape::as.phylo(dend.keto.bls)"
"0",""
"0","#prune tree to only have prodi"
"0",""
"0","#food I want to keep"
"0","p <- bls.extended[!(bls.extended$item_prodi ==""no prodi""  ),]"
"0","prodi <- p$item_descr"
"0","#prune tree"
"0","tree.keto.bls <- drop.tip(tree.keto.bls,tree.keto.bls$tip.label[-match(prodi, tree.keto.bls$tip.label)])"
"0",""
"0","plot(tree.keto.bls, type= 'fan')"
